{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turzm\\\\equipment-page\\\\src\\\\components\\\\Gauges\\\\Gauge.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport Value from './Value.js';\nimport GaugeChart from 'react-gauge-chart';\n\nconst Gauge = props => {\n  const red = 50;\n  const Card = styled.div`\n    background: linear-gradient(to top, rgba(${red},100,100), lightblue);\n    width: 20%;\n    height: 190px;\n    display: inline-block;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    margin: 10px;\n    border-radius: 15px;\n    color: white;\n    line-height: 0px\n    font-family: 'Merriweather', sans-serif;\n    `;\n  const State = styled.h3`\n    font-family: 'Merriweather', sans-serif;\n    font-size 1.0rem;\n    `;\n  var percent = '';\n\n  switch (props.percent) {\n    case \"black\":\n      percent = 0.7;\n      break;\n\n    case \"blueBlack\":\n      percent = 0.5;\n      break;\n\n    default:\n      percent = props.percent;\n      break;\n  }\n\n  var number = '';\n\n  switch (props.number) {\n    case \"blue\":\n      number = \"Blue\";\n      break;\n\n    case \"black\":\n      number = \"Black\";\n      break;\n\n    case \"blueBlack\":\n      number = \"Blue Black\";\n      break;\n\n    case \"greenBlue\":\n      number = \"Green Blue\";\n      break;\n\n    default:\n      number = props.number;\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(GaugeChart, {\n      id: props.id,\n      nrOfLevels: 30,\n      arcPadding: 0.01,\n      colors: ['lightgreen', 'orange', 'red'],\n      percent: percent,\n      hideText: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Value, {\n      value: props.value,\n      number: number,\n      unit: props.unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Gauge;\nexport default Gauge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gauge\");","map":{"version":3,"sources":["C:/Users/turzm/equipment-page/src/components/Gauges/Gauge.js"],"names":["React","styled","Value","GaugeChart","Gauge","props","red","Card","div","State","h3","percent","number","id","value","unit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,IAAI,GAAGN,MAAM,CAACO,GAAI;AAC5B,+CAA+CF,GAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAbI;AAcA,QAAMG,KAAK,GAAGR,MAAM,CAACS,EAAG;AAC5B;AACA;AACA,KAHI;AAMA,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQN,KAAK,CAACM,OAAd;AACI,SAAK,OAAL;AACIA,MAAAA,OAAO,GAAG,GAAV;AACA;;AACJ,SAAK,WAAL;AACIA,MAAAA,OAAO,GAAG,GAAV;AACA;;AACJ;AACIA,MAAAA,OAAO,GAAGN,KAAK,CAACM,OAAhB;AACA;AATR;;AAWA,MAAIC,MAAM,GAAG,EAAb;;AACA,UAAQP,KAAK,CAACO,MAAd;AACI,SAAK,MAAL;AACIA,MAAAA,MAAM,GAAG,MAAT;AACA;;AACJ,SAAK,OAAL;AACIA,MAAAA,MAAM,GAAG,OAAT;AACA;;AACJ,SAAK,WAAL;AACIA,MAAAA,MAAM,GAAG,YAAT;AACA;;AACJ,SAAK,WAAL;AACIA,MAAAA,MAAM,GAAG,YAAT;AACA;;AACJ;AACIA,MAAAA,MAAM,GAAGP,KAAK,CAACO,MAAf;AACA;AAfR;;AAkBA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEP,KAAK,CAACQ,EAAtB;AAA0B,MAAA,UAAU,EAAE,EAAtC;AAA0C,MAAA,UAAU,EAAE,IAAtD;AAA4D,MAAA,MAAM,EAAE,CAAC,YAAD,EAAc,QAAd,EAAwB,KAAxB,CAApE;AAAoG,MAAA,OAAO,EAAEF,OAA7G;AAAsH,MAAA,QAAQ,EAAE;AAAhI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAQ,MAAA,KAAK,EAAEN,KAAK,CAACS,KAArB;AAA4B,MAAA,MAAM,EAAEF,MAApC;AAA4C,MAAA,IAAI,EAAEP,KAAK,CAACU;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5DD;;KAAMX,K;AA8DN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled';\r\nimport Value from './Value.js'\r\nimport GaugeChart from 'react-gauge-chart';\r\n\r\nconst Gauge = (props) => {\r\n\r\n    const red = 50;\r\n    const Card = styled.div`\r\n    background: linear-gradient(to top, rgba(${red},100,100), lightblue);\r\n    width: 20%;\r\n    height: 190px;\r\n    display: inline-block;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 10px;\r\n    border-radius: 15px;\r\n    color: white;\r\n    line-height: 0px\r\n    font-family: 'Merriweather', sans-serif;\r\n    `\r\n    const State = styled.h3`\r\n    font-family: 'Merriweather', sans-serif;\r\n    font-size 1.0rem;\r\n    `\r\n\r\n\r\n    var percent = ''\r\n    switch (props.percent) {\r\n        case \"black\":\r\n            percent = 0.7;\r\n            break;\r\n        case \"blueBlack\":\r\n            percent = 0.5;\r\n            break;\r\n        default:\r\n            percent = props.percent;\r\n            break;\r\n    }\r\n    var number = ''\r\n    switch (props.number) {\r\n        case \"blue\":\r\n            number = \"Blue\";\r\n            break;\r\n        case \"black\":\r\n            number = \"Black\";\r\n            break;\r\n        case \"blueBlack\":\r\n            number = \"Blue Black\";\r\n            break;\r\n        case \"greenBlue\":\r\n            number = \"Green Blue\";\r\n            break;\r\n        default:\r\n            number = props.number;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <GaugeChart id={props.id} nrOfLevels={30} arcPadding={0.01} colors={['lightgreen','orange', 'red']} percent={percent} hideText={true} />\r\n            <Value  value={props.value} number={number} unit={props.unit}/>\r\n        </Card>\r\n     );\r\n}\r\n\r\nexport default Gauge;"]},"metadata":{},"sourceType":"module"}