{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\turzm\\\\equipment-page\\\\src\\\\components\\\\Weather\\\\WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './WeatherForecast.css';\nimport WeatherCard from './WeatherCard.js';\n\nfunction WeatherForecast() {\n  _s();\n\n  const [city, setCity] = useState('Bend, US');\n  const [temp, setTemp] = useState('0');\n  const [temp2, setTemp2] = useState('0');\n  const [temp3, setTemp3] = useState('0');\n  const [time, setTime] = useState('2PM');\n\n  const data = async () => {\n    const response = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},us&units=imperial&mode=json&appid=c640c6cc83953b311bd57ebd01bc9e85`);\n    const responsejson = await response.json();\n    return responsejson;\n  };\n\n  data().then(responsejson => console.log(responsejson.list[0].main.temp, setTemp(responsejson.list[0].main.temp, setTemp2(responsejson.list[1].main.temp, setTemp3(responsejson.list[0].main.temp)))));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(WeatherCard, {\n      temp: temp,\n      condition: \"Clear\",\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temp: temp2,\n      condition: \"Clouds\",\n      time: \"7PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temp: temp3,\n      condition: \"Rain\",\n      time: \"10PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherForecast, \"GpSyzn2GEEsvakfeCHhGBBN7C/I=\");\n\n_c = WeatherForecast;\nexport default WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["C:/Users/turzm/equipment-page/src/components/Weather/WeatherForecast.js"],"names":["React","useState","WeatherCard","WeatherForecast","city","setCity","temp","setTemp","temp2","setTemp2","temp3","setTemp3","time","setTime","data","response","fetch","responsejson","json","then","console","log","list","main"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,uBAAP;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,UAAD,CAA/B;AACA,QAAK,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,GAAD,CAA/B;AACA,QAAK,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,GAAD,CAAjC;AACA,QAAK,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,GAAD,CAAjC;AACA,QAAK,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAA/B;;AAEA,QAAMa,IAAI,GAAG,YAAY;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,qDAAoDZ,IAAK,qEADlC,CAA5B;AAGA,UAAMa,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,WAAOD,YAAP;AACH,GANG;;AAOJH,EAAAA,IAAI,GAAGK,IAAP,CAAYF,YAAY,IAAEG,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACK,IAAb,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BjB,IAAtC,EACtBC,OAAO,CAACU,YAAY,CAACK,IAAb,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BjB,IAA3B,EACPG,QAAQ,CAACQ,YAAY,CAACK,IAAb,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BjB,IAA3B,EACRK,QAAQ,CAACM,YAAY,CAACK,IAAb,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BjB,IAA3B,CADA,CADD,CADe,CAA1B;AAII,sBACI;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAyB,MAAA,SAAS,EAAC,OAAnC;AAA2C,MAAA,IAAI,EAAEM;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEJ,KAAnB;AAA0B,MAAA,SAAS,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEE,KAAnB;AAA0B,MAAA,SAAS,EAAC,MAApC;AAA2C,MAAA,IAAI,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzBQP,e;;KAAAA,e;AA2BT,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport './WeatherForecast.css'\r\n\r\nimport WeatherCard from './WeatherCard.js'\r\n\r\nfunction WeatherForecast() {\r\n    const[city, setCity] = useState('Bend, US')\r\n    const[temp, setTemp] = useState('0');\r\n    const[temp2, setTemp2] = useState('0');\r\n    const[temp3, setTemp3] = useState('0');\r\n    const[time, setTime] = useState('2PM');\r\n\r\n    const data = async () => {\r\n    const response = await fetch(\r\n        `http://api.openweathermap.org/data/2.5/forecast?q=${city},us&units=imperial&mode=json&appid=c640c6cc83953b311bd57ebd01bc9e85`\r\n    );\r\n    const responsejson = await response.json();\r\n    return responsejson;\r\n}\r\ndata().then(responsejson=>console.log(responsejson.list[0].main.temp, \r\n    setTemp(responsejson.list[0].main.temp,\r\n    setTemp2(responsejson.list[1].main.temp,\r\n    setTemp3(responsejson.list[0].main.temp)))))\r\n    return (\r\n        <div class=\"forecast\">\r\n            <WeatherCard temp={temp} condition=\"Clear\" time={time}/>\r\n            <WeatherCard temp={temp2} condition=\"Clouds\" time={\"7PM\"}/>\r\n            <WeatherCard temp={temp3} condition=\"Rain\" time={\"10PM\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherForecast\r\n"]},"metadata":{},"sourceType":"module"}