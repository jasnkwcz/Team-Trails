{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\turzm\\\\equipment-page\\\\src\\\\components\\\\Weather\\\\WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './WeatherForecast.css';\nimport WeatherCard from './WeatherCard.js';\n\nfunction WeatherForecast() {\n  _s();\n\n  const [city, setCity] = useState('Bend');\n  const [weather, setWeather] = useState({\n    time: null,\n    condition: null,\n    temp: null\n  });\n\n  const data = async () => {\n    comopnentDidMount();\n    const response = await fetch(`123http://api.weatherapi.com/v1/forecast.json?key=5a38920fc0804a6c9f205238203010&q=${city}&days=3`);\n    const responsejson = await response.json();\n    return responsejson;\n  };\n\n  data().then(responsejson => {\n    //console.log(responsejson.main)\n    setWeather({//time: responsejson.main[0].temp,\n      //condition: responsejson.main[0].temp,\n      //temp: responsejson.main[0].temp,\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(WeatherCard, {\n      temp: 5,\n      condition: \"Clear\",\n      time: weather.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temp: 5,\n      condition: \"Clouds\",\n      time: \"7PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temp: 5,\n      condition: \"Rain\",\n      time: \"10PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherForecast, \"FDIEGidK8oJOu1TsJqiszhgeUZE=\");\n\n_c = WeatherForecast;\nexport default WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["C:/Users/turzm/equipment-page/src/components/Weather/WeatherForecast.js"],"names":["React","useState","WeatherCard","WeatherForecast","city","setCity","weather","setWeather","time","condition","temp","data","comopnentDidMount","response","fetch","responsejson","json","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,uBAAP;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,MAAD,CAA/B;AACA,QAAK,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AAClCO,IAAAA,IAAI,EAAE,IAD4B;AAElCC,IAAAA,SAAS,EAAE,IAFuB;AAGlCC,IAAAA,IAAI,EAAE;AAH4B,GAAD,CAArC;;AAMA,QAAMC,IAAI,GAAG,YAAY;AACzBC,IAAAA,iBAAiB;AACjB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,sFAAqFV,IAAK,SAD/D,CAA5B;AAGA,UAAMW,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,WAAOD,YAAP;AACH,GAPG;;AAQJJ,EAAAA,IAAI,GAAGM,IAAP,CAAYF,YAAY,IAAE;AACtB;AACAR,IAAAA,UAAU,CAAC,CACP;AACA;AACA;AAHO,KAAD,CAAV;AAKC,GAPL;AAQI,sBACI;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,CAAnB;AAAsB,MAAA,SAAS,EAAC,OAAhC;AAAwC,MAAA,IAAI,EAAED,OAAO,CAACE;AAAtD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,CAAnB;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,IAAI,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,CAAnB;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAuC,MAAA,IAAI,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BQL,e;;KAAAA,e;AAiCT,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport './WeatherForecast.css'\r\n\r\nimport WeatherCard from './WeatherCard.js'\r\n\r\nfunction WeatherForecast() {\r\n    const[city, setCity] = useState('Bend')\r\n    const[weather, setWeather] = useState({\r\n        time: null,\r\n        condition: null,\r\n        temp: null\r\n    });\r\n\r\n    const data = async () => {\r\n    comopnentDidMount()\r\n    const response = await fetch(\r\n    `123http://api.weatherapi.com/v1/forecast.json?key=5a38920fc0804a6c9f205238203010&q=${city}&days=3`\r\n    );\r\n    const responsejson = await response.json();\r\n    return responsejson;\r\n}\r\ndata().then(responsejson=>{\r\n    //console.log(responsejson.main)\r\n    setWeather({\r\n        //time: responsejson.main[0].temp,\r\n        //condition: responsejson.main[0].temp,\r\n        //temp: responsejson.main[0].temp,\r\n    })\r\n    });\r\n    return (\r\n        <div class=\"forecast\">\r\n            <WeatherCard temp={5} condition=\"Clear\" time={weather.time}/>\r\n            <WeatherCard temp={5} condition=\"Clouds\" time={\"7PM\"}/>\r\n            <WeatherCard temp={5} condition=\"Rain\" time={\"10PM\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherForecast\r\n"]},"metadata":{},"sourceType":"module"}