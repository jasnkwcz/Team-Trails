{"ast":null,"code":"\"use strict\";\n\nimport { touchEnabled, pressEvent, setToken, uniqueID, cssTransform, css3DSupported } from \"./helpers.mjs\";\nexport const folds = [];\n/**\n * Represents a single panel of togglable content inside an Accordion.\n *\n * @class\n */\n\nexport default class Fold {\n  /**\n   * Instantiate a new Fold instance.\n   *\n   * @param {Accordion} accordion\n   * @param {HTMLElement} el\n   * @constructor\n   */\n  constructor(accordion, el) {\n    let heading = el.firstElementChild;\n    let content = el.lastElementChild;\n    let useBorders = accordion.useBorders;\n    this.index = folds.push(this) - 1;\n    this.accordion = accordion;\n    this.el = el;\n    this.heading = heading;\n    this.content = content;\n    this.openClass = accordion.openClass;\n    this.closeClass = accordion.closeClass;\n    this.ariaEnabled = !accordion.noAria;\n    this.heightOffset = accordion.heightOffset;\n    this.useBorders = \"auto\" === useBorders ? 0 !== this.elBorder + this.headingBorder : useBorders;\n    this.useTransforms = !accordion.noTransforms && cssTransform;\n    this.onToggle = accordion.onToggle;\n    el.accordionFold = this.index; // Keyboard navigation\n\n    if (!accordion.noKeys) {\n      heading.tabIndex = 0;\n      heading.addEventListener(\"keydown\", this.onKeyDown = e => {\n        const key = e.keyCode;\n        let fold;\n\n        switch (key) {\n          // Spacebar: Toggle\n          case 32:\n            e.preventDefault();\n          // Fall-through\n          // Enter: Toggle\n\n          case 13:\n            this.open = !this.open;\n            if (\"A\" === e.target.tagName) e.preventDefault();\n            break;\n          // Escape: Clear focus\n\n          case 27:\n            e.target.blur();\n            break;\n          // Up arrow: Previous section\n\n          case 38:\n            {\n              // Is there a previous sibling to navigate up to?\n              if (fold = this.previousFold) {\n                let children = fold.childAccordions; // Is it open, and does it have nested accordions?\n\n                if (fold.open && children) {\n                  let lastAcc;\n                  let lastFold; // Locate the deepest/nearest accordion that's currently exposed\n\n                  while (children) {\n                    lastAcc = children[children.length - 1];\n                    lastFold = lastAcc.folds[lastAcc.folds.length - 1];\n                    if (!lastFold.open) break;\n                    children = lastFold.childAccordions;\n                  }\n\n                  lastFold.heading.focus();\n                } // Nope\n                else fold.heading.focus();\n              } // Is there a higher level we can jump back up to?\n              else if (this.accordion.parent) this.accordion.parentFold.heading.focus(); // There's nothing to move back to, so just let the browser run its usual behaviour\n                else return true;\n\n              e.preventDefault();\n              return false;\n            }\n          // Down arrow: Next section\n\n          case 40:\n            {\n              const children = this.childAccordions; // Is there a nested accordion to jump into?\n\n              if (this.open && children) children[0].folds[0].heading.focus(); // No, there isn't. Is there another sibling to move down to?\n              else if (fold = this.nextFold) fold.heading.focus(); // Is there a containing accordion we can navigate back up to?\n                else if (this.accordion.parent) {\n                    let parent = this;\n\n                    while (parent = parent.accordion.parentFold) if (fold = parent.nextFold) {\n                      fold.heading.focus();\n                      break;\n                    } // Nowhere left to go...\n\n\n                    if (!parent) return true;\n                  } // Nah. Just scroll the window normally, as per browser default\n                  else return true;\n              e.preventDefault();\n              return false;\n            }\n          // Left arrow\n\n          case 37:\n            {\n              // Close an opened section\n              if (this.open) this.open = false; // Switch focus back to parent\n              else if (this.accordion.parent) this.accordion.parentFold.heading.focus();\n              break;\n            }\n          // Right arrow\n\n          case 39:\n            {\n              // Open a closed section\n              if (!this.open) this.open = true; // Switch focus to a nested accordion\n              else if (this.childAccordions) this.childAccordions[0].folds[0].heading.focus();\n              break;\n            }\n        }\n      });\n    } // Listener to record the viewport's scroll offsets at the beginning of a touch\n\n\n    let scrollX, scrollY;\n    touchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart = () => {\n      scrollX = window.pageXOffset;\n      scrollY = window.pageYOffset;\n    }, {\n      passive: true\n    });\n    heading.addEventListener(pressEvent, this.onPress = e => {\n      // Pressed on something inside the header\n      if (e.target !== heading && heading.contains(e.target)) {\n        // Cancel fold-toggle if user clicked on an anchor-link\n        if (\"A\" === e.target.tagName && e.target.href) return true;\n      }\n\n      if (e.type !== \"touchend\" || e.cancelable && window.pageXOffset === scrollX && window.pageYOffset === scrollY) {\n        this.open = !this.open;\n        e.preventDefault();\n      }\n\n      return false;\n    });\n  }\n  /**\n   * Adjust a fold's container to fit its content.\n   */\n\n\n  fit() {\n    let height = this.headingHeight;\n    if (this.open) height += this.content.scrollHeight;\n    if (this.useBorders) height += this.elBorder;\n    this.height = height;\n  }\n  /**\n   * Add or remove relevant ARIA attributes from the fold's elements.\n   *\n   * @property\n   * @type {Boolean}\n   */\n\n\n  get ariaEnabled() {\n    return this._ariaEnabled;\n  }\n\n  set ariaEnabled(input) {\n    if ((input = !!input) !== !!this._ariaEnabled) {\n      const heading = this.heading;\n      const content = this.content;\n      this._ariaEnabled = input; // Enable ARIA-attribute management\n\n      if (input) {\n        heading.setAttribute(\"role\", \"tab\");\n        content.setAttribute(\"role\", \"tabpanel\"); // Ensure the fold's elements have unique ID attributes.\n\n        const headingSuffix = \"-heading\";\n        const contentSuffix = \"-content\";\n        let elID = this.el.id;\n        let id; // Neither of the fold's elements have an ID attribute\n\n        if (!heading.id && !content.id) {\n          id = elID || uniqueID(\"a\");\n          heading.id = id + headingSuffix;\n          content.id = id + contentSuffix;\n        } // Either the heading or element lack an ID\n        else if (!content.id) content.id = (elID || heading.id) + contentSuffix;else if (!heading.id) heading.id = (elID || content.id) + headingSuffix; // Finally, double-check each element's ID is really unique\n\n\n        const $ = s => document.querySelectorAll(\"#\" + s);\n\n        while ($(content.id).length > 1 || $(heading.id).length > 1) {\n          id = uniqueID(\"a\");\n          content.id = id + contentSuffix;\n          heading.id = id + headingSuffix;\n        } // Update ARIA attributes\n\n\n        heading.setAttribute(\"aria-controls\", content.id);\n        content.setAttribute(\"aria-labelledby\", heading.id); // Update the attributes that're controlled by .open's setter\n\n        heading.setAttribute(\"aria-selected\", !!this._open);\n        heading.setAttribute(\"aria-expanded\", !!this._open);\n        content.setAttribute(\"aria-hidden\", !this._open);\n      } // Disabling; remove all relevant attributes\n      else {\n          heading.removeAttribute(\"role\");\n          heading.removeAttribute(\"aria-controls\");\n          heading.removeAttribute(\"aria-selected\");\n          heading.removeAttribute(\"aria-expanded\");\n          content.removeAttribute(\"role\");\n          content.removeAttribute(\"aria-labelledby\");\n          content.removeAttribute(\"aria-hidden\");\n        }\n    }\n  }\n  /**\n   * Whether or not the fold's currently opened.\n   *\n   * @property\n   * @type {Boolean}\n   */\n\n\n  get open() {\n    // Derive the fold's opened state from the DOM if it's not been determined yet\n    if (undefined === this._open) {\n      const classes = this.el.classList;\n      this._open = classes.contains(this.openClass);\n      setToken(classes, this.closeClass, !this._open);\n    }\n\n    return this._open;\n  }\n\n  set open(input) {\n    if ((input = !!input) !== this._open) {\n      // If an onToggle callback was specified, run it. Avoid doing anything if it returns false.\n      if (\"function\" === typeof this.onToggle && false === this.onToggle.call(null, this, input)) return;\n      setToken(this.el.classList, this.openClass, input);\n      setToken(this.el.classList, this.closeClass, !input);\n      this._open = input; // Update ARIA attributes\n\n      if (this.ariaEnabled) {\n        const heading = this.heading;\n        heading.setAttribute(\"aria-selected\", input);\n        heading.setAttribute(\"aria-expanded\", input);\n        this.content.setAttribute(\"aria-hidden\", !input);\n      } // If this fold was closed when the screen resized, run a full update in case its contents were juggled around\n\n\n      if (this.needsRefresh) {\n        delete this.needsRefresh;\n        this.accordion.refresh();\n      } else this.accordion.update(); // Close other folds if accordion is modal\n\n\n      if (this.accordion.modal && input) {\n        for (const fold of this.accordion.folds) if (this !== fold) fold.open = false;\n      }\n    }\n  }\n  /**\n   * Whether the fold's been deactivated.\n   *\n   * Not set directly; changed when setting an accordion's .disabled property.\n   *\n   * @property\n   * @type {Boolean}\n   */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(input) {\n    if ((input = !!input) !== !!this._disabled) {\n      let heading = this.heading;\n      let style = this.el.style;\n      let classes = this.el.classList; // Deactivated\n\n      if (this._disabled = input) {\n        style.height = null;\n        this.useTransforms ? style[cssTransform] = null : style.top = null;\n        touchEnabled && heading.removeEventListener(\"touchstart\", this.onTouchStart);\n        heading.removeEventListener(pressEvent, this.onPress);\n        classes.remove(this.openClass, this.closeClass);\n\n        if (this.onKeyDown) {\n          heading.removeEventListener(\"keydown\", this.onKeyDown);\n          heading.removeAttribute(\"tabindex\");\n        }\n\n        if (this.ariaEnabled) {\n          this.ariaEnabled = false;\n          this._ariaEnabled = true;\n        }\n      } // Reactivated\n      else {\n          style.height = this._height + \"px\";\n          this.useTransforms ? style[cssTransform] = css3DSupported ? \"translate3D(0,\" + this._y + \"px,0)\" : \"translateY(\" + this._y + \"px)\" : style.top = this._y + \"px\";\n          touchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart);\n          heading.addEventListener(pressEvent, this.onPress);\n\n          if (this.onKeyDown) {\n            heading.addEventListener(\"keydown\", this.onKeyDown);\n            heading.tabIndex = 0;\n          }\n        }\n    }\n  }\n  /**\n   * Vertical position of the fold within an accordion's container.\n   *\n   * @property\n   * @type {Number}\n   */\n\n\n  get y() {\n    if (undefined === this._y) return this._y = parseInt(this.el.style.top) || 0;\n    return this._y;\n  }\n\n  set y(input) {\n    if ((input = +input) !== this._y) {\n      this._y = input;\n      const style = this.el.style;\n      this.useTransforms ? style[cssTransform] = css3DSupported ? \"translate3D(0,\" + input + \"px,0)\" : \"translateY(\" + input + \"px)\" : style.top = input + \"px\";\n    }\n  }\n  /**\n   * Height of the fold's outermost container.\n   *\n   * @property\n   * @type {Number}\n   */\n\n\n  get height() {\n    if (undefined === this._height) {\n      let height = this.headingHeight + this.content.scrollHeight;\n      this.el.style.height = height + \"px\";\n      return this._height = height;\n    }\n\n    return this._height;\n  }\n\n  set height(input) {\n    if (input && (input = +input) !== this._height) {\n      this.el.style.height = input + \"px\";\n      this._height = input;\n    }\n  }\n  /**\n   * Current height of the fold's heading.\n   *\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get headingHeight() {\n    return this.heading.scrollHeight + this.heightOffset + (this.useBorders ? this.headingBorder : 0);\n  }\n  /**\n   * Total height consumed by the heading element's CSS borders, if any.\n   *\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get headingBorder() {\n    let heading = this.heading;\n    return (heading.offsetHeight || 0) - (heading.clientHeight || 0);\n  }\n  /**\n   * Total height of the fold's container element.\n   *\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get elHeight() {\n    return this.el.scrollHeight + (this.useBorders ? this.elBorder : 0);\n  }\n  /**\n   * Total height consumed by container element's CSS borders, if any.\n   * \n   * @type {Number}\n   * @readonly\n   */\n\n\n  get elBorder() {\n    let el = this.el;\n    return (el.offsetHeight || 0) - (el.clientHeight || 0);\n  }\n  /**\n   * Whether the fold's container has been resized incorrectly.\n   *\n   * @type {Boolean}\n   * @readonly\n   * @property\n   */\n\n\n  get wrongSize() {\n    return this.headingHeight + this.content.scrollHeight !== this.el.scrollHeight;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/turzm/equipment-page/src/components/Accordion/src/fold.mjs"],"names":["touchEnabled","pressEvent","setToken","uniqueID","cssTransform","css3DSupported","folds","Fold","constructor","accordion","el","heading","firstElementChild","content","lastElementChild","useBorders","index","push","openClass","closeClass","ariaEnabled","noAria","heightOffset","elBorder","headingBorder","useTransforms","noTransforms","onToggle","accordionFold","noKeys","tabIndex","addEventListener","onKeyDown","e","key","keyCode","fold","preventDefault","open","target","tagName","blur","previousFold","children","childAccordions","lastAcc","lastFold","length","focus","parent","parentFold","nextFold","scrollX","scrollY","onTouchStart","window","pageXOffset","pageYOffset","passive","onPress","contains","href","type","cancelable","fit","height","headingHeight","scrollHeight","_ariaEnabled","input","setAttribute","headingSuffix","contentSuffix","elID","id","$","s","document","querySelectorAll","_open","removeAttribute","undefined","classes","classList","call","needsRefresh","refresh","update","modal","disabled","_disabled","style","top","removeEventListener","remove","_height","_y","y","parseInt","offsetHeight","clientHeight","elHeight","wrongSize"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport {\n\ttouchEnabled,\n\tpressEvent,\n\tsetToken,\n\tuniqueID,\n\tcssTransform,\n\tcss3DSupported,\n} from \"./helpers.mjs\";\n\nexport const folds = [];\n\n\n/**\n * Represents a single panel of togglable content inside an Accordion.\n *\n * @class\n */\nexport default class Fold{\n\t\n\t/**\n\t * Instantiate a new Fold instance.\n\t *\n\t * @param {Accordion} accordion\n\t * @param {HTMLElement} el\n\t * @constructor\n\t */\n\tconstructor(accordion, el){\n\t\tlet heading          = el.firstElementChild;\n\t\tlet content          = el.lastElementChild;\n\t\tlet useBorders       = accordion.useBorders;\n\t\t\n\t\tthis.index           = folds.push(this) - 1;\n\t\tthis.accordion       = accordion;\n\t\tthis.el              = el;\n\t\tthis.heading         = heading;\n\t\tthis.content         = content;\n\t\tthis.openClass       = accordion.openClass;\n\t\tthis.closeClass      = accordion.closeClass;\n\t\tthis.ariaEnabled     = !accordion.noAria;\n\t\tthis.heightOffset    = accordion.heightOffset;\n\t\tthis.useBorders      = \"auto\" === useBorders ? (0 !== this.elBorder + this.headingBorder) : useBorders;\n\t\tthis.useTransforms   = !accordion.noTransforms && cssTransform;\n\t\tthis.onToggle        = accordion.onToggle;\n\t\tel.accordionFold     = this.index;\n\t\t\n\t\t\n\t\t// Keyboard navigation\n\t\tif(!accordion.noKeys){\n\t\t\theading.tabIndex = 0;\n\t\t\theading.addEventListener(\"keydown\", this.onKeyDown = e => {\n\t\t\t\tconst key = e.keyCode;\n\t\t\t\tlet fold;\n\t\t\t\t\n\t\t\t\tswitch(key){\n\n\t\t\t\t\t// Spacebar: Toggle\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\te.preventDefault(); // Fall-through\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Enter: Toggle\n\t\t\t\t\tcase 13:\n\t\t\t\t\t\tthis.open = !this.open;\n\t\t\t\t\t\tif(\"A\" === e.target.tagName)\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Escape: Clear focus\n\t\t\t\t\tcase 27:\n\t\t\t\t\t\te.target.blur();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Up arrow: Previous section\n\t\t\t\t\tcase 38:{\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a previous sibling to navigate up to?\n\t\t\t\t\t\tif(fold = this.previousFold){\n\t\t\t\t\t\t\tlet children = fold.childAccordions;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Is it open, and does it have nested accordions?\n\t\t\t\t\t\t\tif(fold.open && children){\n\t\t\t\t\t\t\t\tlet lastAcc;\n\t\t\t\t\t\t\t\tlet lastFold;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Locate the deepest/nearest accordion that's currently exposed\n\t\t\t\t\t\t\t\twhile(children){\n\t\t\t\t\t\t\t\t\tlastAcc  = children[children.length - 1];\n\t\t\t\t\t\t\t\t\tlastFold = lastAcc.folds[lastAcc.folds.length - 1];\n\t\t\t\t\t\t\t\t\tif(!lastFold.open) break;\n\t\t\t\t\t\t\t\t\tchildren = lastFold.childAccordions;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlastFold.heading.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Nope\n\t\t\t\t\t\t\telse fold.heading.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a higher level we can jump back up to?\n\t\t\t\t\t\telse if(this.accordion.parent)\n\t\t\t\t\t\t\tthis.accordion.parentFold.heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// There's nothing to move back to, so just let the browser run its usual behaviour\n\t\t\t\t\t\telse return true;\n\t\t\t\t\t\t\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Down arrow: Next section\n\t\t\t\t\tcase 40:{\n\t\t\t\t\t\tconst children = this.childAccordions;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a nested accordion to jump into?\n\t\t\t\t\t\tif(this.open && children)\n\t\t\t\t\t\t\tchildren[0].folds[0].heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// No, there isn't. Is there another sibling to move down to?\n\t\t\t\t\t\telse if(fold = this.nextFold)\n\t\t\t\t\t\t\tfold.heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a containing accordion we can navigate back up to?\n\t\t\t\t\t\telse if(this.accordion.parent){\n\t\t\t\t\t\t\tlet parent = this;\n\t\t\t\t\t\t\twhile(parent = parent.accordion.parentFold)\n\t\t\t\t\t\t\t\tif(fold = parent.nextFold){\n\t\t\t\t\t\t\t\t\tfold.heading.focus();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Nowhere left to go...\n\t\t\t\t\t\t\tif(!parent) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Nah. Just scroll the window normally, as per browser default\n\t\t\t\t\t\telse return true;\n\t\t\t\t\t\t\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Left arrow\n\t\t\t\t\tcase 37:{\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Close an opened section\n\t\t\t\t\t\tif(this.open) this.open = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Switch focus back to parent\n\t\t\t\t\t\telse if(this.accordion.parent)\n\t\t\t\t\t\t\tthis.accordion.parentFold.heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Right arrow\n\t\t\t\t\tcase 39:{\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Open a closed section\n\t\t\t\t\t\tif(!this.open) this.open = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Switch focus to a nested accordion\n\t\t\t\t\t\telse if(this.childAccordions)\n\t\t\t\t\t\t\tthis.childAccordions[0].folds[0].heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t\n\t\t// Listener to record the viewport's scroll offsets at the beginning of a touch\n\t\tlet scrollX, scrollY;\n\t\ttouchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart = () => {\n\t\t\tscrollX = window.pageXOffset;\n\t\t\tscrollY = window.pageYOffset;\n\t\t}, {passive: true});\n\t\t\n\t\t\n\t\theading.addEventListener(pressEvent, this.onPress = e => {\n\t\t\t\n\t\t\t// Pressed on something inside the header\n\t\t\tif(e.target !== heading && heading.contains(e.target)){\n\t\t\t\t\n\t\t\t\t// Cancel fold-toggle if user clicked on an anchor-link\n\t\t\t\tif(\"A\" === e.target.tagName && e.target.href)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\tif(e.type !== \"touchend\" || (e.cancelable && window.pageXOffset === scrollX && window.pageYOffset === scrollY)){\n\t\t\t\tthis.open = !this.open;\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\t\n\t\n\t/**\n\t * Adjust a fold's container to fit its content.\n\t */\n\tfit(){\n\t\tlet height = this.headingHeight;\n\t\tif(this.open)        height += this.content.scrollHeight;\n\t\tif(this.useBorders)  height += this.elBorder;\n\t\tthis.height = height;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Add or remove relevant ARIA attributes from the fold's elements.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget ariaEnabled(){ return this._ariaEnabled; }\n\tset ariaEnabled(input){\n\t\tif((input = !!input) !== !!this._ariaEnabled){\n\t\t\tconst heading = this.heading;\n\t\t\tconst content = this.content;\n\t\t\tthis._ariaEnabled = input;\n\t\t\t\n\t\t\t// Enable ARIA-attribute management\n\t\t\tif(input){\n\t\t\t\theading.setAttribute(\"role\", \"tab\");\n\t\t\t\tcontent.setAttribute(\"role\", \"tabpanel\");\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// Ensure the fold's elements have unique ID attributes.\n\t\t\t\tconst headingSuffix = \"-heading\";\n\t\t\t\tconst contentSuffix = \"-content\";\n\t\t\t\tlet elID            = this.el.id;\n\t\t\t\tlet id;\n\t\t\t\t\n\t\t\t\t// Neither of the fold's elements have an ID attribute\n\t\t\t\tif(!heading.id && !content.id){\n\t\t\t\t\tid             = elID || uniqueID(\"a\");\n\t\t\t\t\theading.id     = id + headingSuffix;\n\t\t\t\t\tcontent.id     = id + contentSuffix;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Either the heading or element lack an ID\n\t\t\t\telse if(!content.id) content.id   = (elID || heading.id) + contentSuffix;\n\t\t\t\telse if(!heading.id) heading.id   = (elID || content.id) + headingSuffix;\n\t\t\t\t\n\t\t\t\t// Finally, double-check each element's ID is really unique\n\t\t\t\tconst $ = s => document.querySelectorAll(\"#\"+s);\n\t\t\t\twhile($(content.id).length > 1 || $(heading.id).length > 1){\n\t\t\t\t\tid         = uniqueID(\"a\");\n\t\t\t\t\tcontent.id = id + contentSuffix;\n\t\t\t\t\theading.id = id + headingSuffix;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update ARIA attributes\n\t\t\t\theading.setAttribute(\"aria-controls\",    content.id);\n\t\t\t\tcontent.setAttribute(\"aria-labelledby\",  heading.id);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// Update the attributes that're controlled by .open's setter\n\t\t\t\theading.setAttribute(\"aria-selected\",  !!this._open);\n\t\t\t\theading.setAttribute(\"aria-expanded\",  !!this._open);\n\t\t\t\tcontent.setAttribute(\"aria-hidden\",     !this._open);\n\t\t\t}\n\t\t\t\n\t\t\t// Disabling; remove all relevant attributes\n\t\t\telse{\n\t\t\t\theading.removeAttribute(\"role\");\n\t\t\t\theading.removeAttribute(\"aria-controls\");\n\t\t\t\theading.removeAttribute(\"aria-selected\");\n\t\t\t\theading.removeAttribute(\"aria-expanded\");\n\t\t\t\t\n\t\t\t\tcontent.removeAttribute(\"role\");\n\t\t\t\tcontent.removeAttribute(\"aria-labelledby\");\n\t\t\t\tcontent.removeAttribute(\"aria-hidden\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Whether or not the fold's currently opened.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget open(){\n\t\t\n\t\t// Derive the fold's opened state from the DOM if it's not been determined yet\n\t\tif(undefined === this._open){\n\t\t\tconst classes = this.el.classList;\n\t\t\tthis._open    = classes.contains(this.openClass);\n\t\t\tsetToken(classes, this.closeClass, !this._open);\n\t\t}\n\t\t\n\t\treturn this._open;\n\t}\n\t\n\tset open(input){\n\t\tif((input = !!input) !== this._open){\n\t\t\t\n\t\t\t// If an onToggle callback was specified, run it. Avoid doing anything if it returns false.\n\t\t\tif(\"function\" === typeof this.onToggle && false === this.onToggle.call(null, this, input))\n\t\t\t\treturn;\n\t\t\t\n\t\t\tsetToken(this.el.classList, this.openClass,   input);\n\t\t\tsetToken(this.el.classList, this.closeClass, !input);\n\t\t\tthis._open = input;\n\t\t\t\n\t\t\t// Update ARIA attributes\n\t\t\tif(this.ariaEnabled){\n\t\t\t\tconst heading = this.heading;\n\t\t\t\theading.setAttribute(\"aria-selected\",      input);\n\t\t\t\theading.setAttribute(\"aria-expanded\",      input);\n\t\t\t\tthis.content.setAttribute(\"aria-hidden\",  !input);\n\t\t\t}\n\t\t\t\n\t\t\t// If this fold was closed when the screen resized, run a full update in case its contents were juggled around\n\t\t\tif(this.needsRefresh){\n\t\t\t\tdelete this.needsRefresh;\n\t\t\t\tthis.accordion.refresh();\n\t\t\t}\n\t\t\telse this.accordion.update();\n\t\t\t\n\t\t\t// Close other folds if accordion is modal\n\t\t\tif(this.accordion.modal && input){\n\t\t\t\tfor(const fold of this.accordion.folds)\n\t\t\t\t\tif(this !== fold) fold.open = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Whether the fold's been deactivated.\n\t *\n\t * Not set directly; changed when setting an accordion's .disabled property.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget disabled(){ return this._disabled; }\n\tset disabled(input){\n\t\tif((input = !!input) !== !!this._disabled){\n\t\t\tlet heading = this.heading;\n\t\t\tlet style   = this.el.style;\n\t\t\tlet classes = this.el.classList;\n\t\t\t\n\t\t\t// Deactivated\n\t\t\tif(this._disabled = input){\n\t\t\t\tstyle.height = null;\n\t\t\t\tthis.useTransforms\n\t\t\t\t\t? (style[cssTransform] = null)\n\t\t\t\t\t: (style.top = null);\n\t\t\t\t\n\t\t\t\ttouchEnabled && heading.removeEventListener(\"touchstart\", this.onTouchStart);\n\t\t\t\theading.removeEventListener(pressEvent, this.onPress);\n\t\t\t\tclasses.remove(this.openClass, this.closeClass);\n\t\t\t\tif(this.onKeyDown){\n\t\t\t\t\theading.removeEventListener(\"keydown\", this.onKeyDown);\n\t\t\t\t\theading.removeAttribute(\"tabindex\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.ariaEnabled){\n\t\t\t\t\tthis.ariaEnabled  = false;\n\t\t\t\t\tthis._ariaEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Reactivated\n\t\t\telse{\n\t\t\t\tstyle.height = this._height + \"px\";\n\t\t\t\tthis.useTransforms\n\t\t\t\t\t? style[cssTransform] =\n\t\t\t\t\t\tcss3DSupported\n\t\t\t\t\t\t\t? (\"translate3D(0,\" + this._y + \"px,0)\")\n\t\t\t\t\t\t\t: (\"translateY(\"    + this._y + \"px)\")\n\t\t\t\t\t: (style.top = this._y + \"px\");\n\t\t\t\t\n\t\t\t\ttouchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart);\n\t\t\t\theading.addEventListener(pressEvent, this.onPress);\n\t\t\t\t\n\t\t\t\tif(this.onKeyDown){\n\t\t\t\t\theading.addEventListener(\"keydown\", this.onKeyDown);\n\t\t\t\t\theading.tabIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Vertical position of the fold within an accordion's container.\n\t *\n\t * @property\n\t * @type {Number}\n\t */\n\tget y(){\n\t\tif(undefined === this._y)\n\t\t\treturn (this._y = parseInt(this.el.style.top) || 0);\n\t\treturn this._y;\n\t}\n\t\n\tset y(input){\n\t\tif((input = +input) !== this._y){\n\t\t\tthis._y     = input;\n\t\t\tconst style = this.el.style;\n\t\t\tthis.useTransforms\n\t\t\t\t? style[cssTransform] =\n\t\t\t\t\tcss3DSupported\n\t\t\t\t\t\t? (\"translate3D(0,\" + input + \"px,0)\")\n\t\t\t\t\t\t: (\"translateY(\"    + input + \"px)\")\n\t\t\t\t: (style.top = input + \"px\");\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Height of the fold's outermost container.\n\t *\n\t * @property\n\t * @type {Number}\n\t */\n\tget height(){\n\t\tif(undefined === this._height){\n\t\t\tlet height           = this.headingHeight + this.content.scrollHeight;\n\t\t\tthis.el.style.height = height + \"px\";\n\t\t\treturn (this._height = height);\n\t\t}\n\t\treturn this._height;\n\t}\n\t\n\tset height(input){\n\t\tif(input && (input = +input) !== this._height){\n\t\t\tthis.el.style.height = input + \"px\";\n\t\t\tthis._height         = input;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Current height of the fold's heading.\n\t *\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget headingHeight(){\n\t\treturn this.heading.scrollHeight\n\t\t\t+ this.heightOffset\n\t\t\t+ (this.useBorders ? this.headingBorder : 0);\n\t}\n\t\n\t/**\n\t * Total height consumed by the heading element's CSS borders, if any.\n\t *\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget headingBorder(){\n\t\tlet heading = this.heading;\n\t\treturn (heading.offsetHeight || 0) - (heading.clientHeight || 0);\n\t}\n\t\n\t\n\t/**\n\t * Total height of the fold's container element.\n\t *\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget elHeight(){\n\t\treturn this.el.scrollHeight + (this.useBorders ? this.elBorder : 0);\n\t}\n\t\n\t/**\n\t * Total height consumed by container element's CSS borders, if any.\n\t * \n\t * @type {Number}\n\t * @readonly\n\t */\n\tget elBorder(){\n\t\tlet el = this.el;\n\t\treturn (el.offsetHeight || 0) - (el.clientHeight || 0);\n\t}\n\t\n\t\n\t/**\n\t * Whether the fold's container has been resized incorrectly.\n\t *\n\t * @type {Boolean}\n\t * @readonly\n\t * @property\n\t */\n\tget wrongSize(){\n\t\treturn this.headingHeight + this.content.scrollHeight !== this.el.scrollHeight;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}