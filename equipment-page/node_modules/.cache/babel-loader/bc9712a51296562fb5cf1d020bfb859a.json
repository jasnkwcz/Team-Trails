{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\turzm\\\\equipment-page\\\\src\\\\components\\\\Gauges\\\\GaugeHolder.js\";\nimport React, { Component } from 'react';\nimport Gauge from './Gauge.js';\n\nclass GaugeHolder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      id: 7001635\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://www.hikingproject.com/data/get-trails-by-id?ids=7001635&key=200962200-a3f1d16081e9f29cfec2bd00a7bd1948').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json.trails\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      items\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Gauge, {\n          value: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Gaugeholder\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n            value: \"Length:\",\n            number: item.length,\n            unit: \"Miles\",\n            id: \"gauge-chart3\",\n            percent: item.length * 0.03\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n            value: \"Difficulty:\",\n            number: item.difficulty,\n            id: \"gauge-chart1\",\n            percent: item.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n            value: \"Alt. Change: \",\n            id: \"gauge-chart2\",\n            percent: (item.high - item.low) * 0.0002,\n            number: item.high - item.low,\n            unit: \"Feet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default GaugeHolder;","map":{"version":3,"sources":["C:/Users/turzm/equipment-page/src/components/Gauges/GaugeHolder.js"],"names":["React","Component","Gauge","GaugeHolder","constructor","props","state","items","isLoaded","id","componentDidMount","fetch","then","res","json","setState","trails","catch","err","console","log","render","map","item","name","length","difficulty","high","low"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,EAAE,EAAE;AAHK,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,KAAK,CAAC,gHAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVP,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAEO,IAAI,CAACE;AAFF,OAAd;AAIH,KAPL,EAOOC,KAPP,CAOcC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATL;AAUH;;AAEDG,EAAAA,MAAM,GAAG;AAEL,QAAI;AAAEb,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAsB,KAAKD,KAA/B;;AAEA,QAAG,CAACE,QAAJ,EAAc;AACV,0BAAO;AAAA,+BACH,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJD,MAKK;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACKD,KAAK,CAACe,GAAN,CAAUC,IAAI,iBACf;AAAA,kCACA;AAAA,sBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,SAAd;AAAyB,YAAA,MAAM,EAAED,IAAI,CAACE,MAAtC;AAA8C,YAAA,IAAI,EAAE,OAApD;AAA6D,YAAA,EAAE,EAAE,cAAjE;AAAiF,YAAA,OAAO,EAAEF,IAAI,CAACE,MAAL,GAAY;AAAtG;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,aAAd;AAA6B,YAAA,MAAM,EAAEF,IAAI,CAACG,UAA1C;AAAsD,YAAA,EAAE,EAAE,cAA1D;AAA0E,YAAA,OAAO,EAAEH,IAAI,CAACG;AAAxF;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,eAAd;AAA+B,YAAA,EAAE,EAAE,cAAnC;AAAmD,YAAA,OAAO,EAAE,CAACH,IAAI,CAACI,IAAL,GAAUJ,IAAI,CAACK,GAAhB,IAAqB,MAAjF;AAAyF,YAAA,MAAM,EAAEL,IAAI,CAACI,IAAL,GAAUJ,IAAI,CAACK,GAAhH;AAAqH,YAAA,IAAI,EAAE;AAA3H;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH;AACA;;AAjD+B;;AAmDpC,eAAezB,WAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Gauge from './Gauge.js'\r\n\r\nclass GaugeHolder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n            id: 7001635\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        fetch('https://www.hikingproject.com/data/get-trails-by-id?ids=7001635&key=200962200-a3f1d16081e9f29cfec2bd00a7bd1948')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json.trails,\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        var { isLoaded, items } = this.state;\r\n\r\n        if(!isLoaded) {\r\n            return <div>\r\n                <Gauge value={\"Loading...\"}></Gauge>\r\n            </div>;\r\n        }\r\n        else {\r\n        return (\r\n            <div className=\"Gaugeholder\">\r\n                {items.map(item => (\r\n                <div>\r\n                <p>{item.name}</p>\r\n                <Gauge value={\"Length:\"} number={item.length} unit={\"Miles\"} id={\"gauge-chart3\"} percent={item.length*0.03}/>\r\n                <Gauge value={\"Difficulty:\"} number={item.difficulty} id={\"gauge-chart1\"} percent={item.difficulty}/>\r\n                <Gauge value={\"Alt. Change: \"} id={\"gauge-chart2\"} percent={(item.high-item.low)*0.0002} number={item.high-item.low} unit={\"Feet\"}/>\r\n                </div>\r\n                ))}\r\n            \r\n            \r\n            </div>\r\n        )\r\n\r\n    }\r\n    }\r\n}\r\nexport default GaugeHolder\r\n"]},"metadata":{},"sourceType":"module"}